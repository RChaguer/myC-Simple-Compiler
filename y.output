Terminals unused in grammar

   DOT
   ARR


State 24 conflicts: 1 shift/reduce
State 31 conflicts: 1 shift/reduce
State 46 conflicts: 1 shift/reduce
State 49 conflicts: 12 shift/reduce
State 51 conflicts: 12 shift/reduce
State 53 conflicts: 2 shift/reduce
State 59 conflicts: 1 shift/reduce
State 63 conflicts: 2 shift/reduce
State 71 conflicts: 12 shift/reduce, 14 reduce/reduce
State 75 conflicts: 12 shift/reduce
State 78 conflicts: 12 shift/reduce
State 93 conflicts: 2 shift/reduce
State 102 conflicts: 1 shift/reduce
State 117 conflicts: 2 shift/reduce
State 122 conflicts: 12 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: head func_list

    2 head: %empty

    3 func_list: func_list fun
    4          | fun

    5 fun: type fun_head fun_body

    6 fun_head: ID PO PF
    7         | ID PO params PF

    8 params: type ID vir params
    9       | type ID

   10 vlist: ID vir vlist
   11      | ID

   12 vir: VIR

   13 fun_body: func_AO block func_AF

   14 func_AO: AO

   15 func_AF: AF

   16 block: decl_list inst_list

   17 decl_list: decl_list decl
   18          | %empty

   19 decl: var_decl PV

   20 var_decl: type vlist

   21 type: typename pointer
   22     | typename

   23 typename: TINT
   24         | VOID

   25 pointer: pointer STAR
   26        | STAR

   27 inst_list: inst PV inst_list
   28          | inst pvo
   29          | cond inst_list
   30          | loop inst_list

   31 pvo: PV
   32    | %empty

   33 start_block: AO

   34 end_block: AF

   35 inst: exp
   36     | start_block block end_block
   37     | aff
   38     | ret
   39     | PV
   40     | %empty

   41 aff: ID EQ exp
   42    | STAR exp EQ exp

   43 ret: RETURN exp
   44    | RETURN PV

   45 cond: if bool_cond inst_list elsop

   46 elsop: else inst_list
   47      | %empty

   48 bool_cond: PO exp PF

   49 if: IF

   50 else: ELSE

   51 loop: while while_cond inst_list

   52 while_cond: PO exp PF

   53 while: WHILE

   54 exp: MOINS exp
   55    | exp PLUS exp
   56    | exp MOINS exp
   57    | exp STAR exp
   58    | exp DIV exp
   59    | PO exp PF
   60    | ID
   61    | app
   62    | NUMI
   63    | NUMF
   64    | STAR exp
   65    | NOT exp
   66    | exp INF exp
   67    | exp SUP exp
   68    | exp EQUAL exp
   69    | exp DIFF exp
   70    | exp AND exp
   71    | exp OR exp

   72 app: ID PO args PF

   73 args: arglist
   74     | %empty

   75 arglist: exp VIR arglist
   76        | exp


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMI (258) 62
NUMF (259) 63
TINT (260) 23
ID (261) 6 7 8 9 10 11 41 60 72
AO (262) 14 33
AF (263) 15 34
PO (264) 6 7 48 52 59 72
PF (265) 6 7 48 52 59 72
PV (266) 19 27 31 39 44
VIR (267) 12 75
RETURN (268) 43 44
VOID (269) 24
EQ (270) 41 42
IF (271) 49
ELSE (272) 50
WHILE (273) 53
AND (274) 70
OR (275) 71
NOT (276) 65
DIFF (277) 69
EQUAL (278) 68
SUP (279) 67
INF (280) 66
PLUS (281) 55
MOINS (282) 54 56
STAR (283) 25 26 42 57 64
DIV (284) 58
DOT (285)
ARR (286)
UNA (287)


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
prog (34)
    on left: 1, on right: 0
head (35)
    on left: 2, on right: 1
func_list (36)
    on left: 3 4, on right: 1 3
fun (37)
    on left: 5, on right: 3 4
fun_head (38)
    on left: 6 7, on right: 5
params (39)
    on left: 8 9, on right: 7 8
vlist (40)
    on left: 10 11, on right: 10 20
vir (41)
    on left: 12, on right: 8 10
fun_body (42)
    on left: 13, on right: 5
func_AO (43)
    on left: 14, on right: 13
func_AF (44)
    on left: 15, on right: 13
block (45)
    on left: 16, on right: 13 36
decl_list (46)
    on left: 17 18, on right: 16 17
decl (47)
    on left: 19, on right: 17
var_decl (48)
    on left: 20, on right: 19
type (49)
    on left: 21 22, on right: 5 8 9 20
typename (50)
    on left: 23 24, on right: 21 22
pointer (51)
    on left: 25 26, on right: 21 25
inst_list (52)
    on left: 27 28 29 30, on right: 16 27 29 30 45 46 51
pvo (53)
    on left: 31 32, on right: 28
start_block (54)
    on left: 33, on right: 36
end_block (55)
    on left: 34, on right: 36
inst (56)
    on left: 35 36 37 38 39 40, on right: 27 28
aff (57)
    on left: 41 42, on right: 37
ret (58)
    on left: 43 44, on right: 38
cond (59)
    on left: 45, on right: 29
elsop (60)
    on left: 46 47, on right: 45
bool_cond (61)
    on left: 48, on right: 45
if (62)
    on left: 49, on right: 45
else (63)
    on left: 50, on right: 46
loop (64)
    on left: 51, on right: 30
while_cond (65)
    on left: 52, on right: 51
while (66)
    on left: 53, on right: 51
exp (67)
    on left: 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71,
    on right: 35 41 42 43 48 52 54 55 56 57 58 59 64 65 66 67 68 69
    70 71 75 76
app (68)
    on left: 72, on right: 61
args (69)
    on left: 73 74, on right: 72
arglist (70)
    on left: 75 76, on right: 73 75


State 0

    0 $accept: . prog $end

    $default  reduce using rule 2 (head)

    prog  go to state 1
    head  go to state 2


State 1

    0 $accept: prog . $end

    $end  shift, and go to state 3


State 2

    1 prog: head . func_list

    TINT  shift, and go to state 4
    VOID  shift, and go to state 5

    func_list  go to state 6
    fun        go to state 7
    type       go to state 8
    typename   go to state 9


State 3

    0 $accept: prog $end .

    $default  accept


State 4

   23 typename: TINT .

    $default  reduce using rule 23 (typename)


State 5

   24 typename: VOID .

    $default  reduce using rule 24 (typename)


State 6

    1 prog: head func_list .
    3 func_list: func_list . fun

    TINT  shift, and go to state 4
    VOID  shift, and go to state 5

    $default  reduce using rule 1 (prog)

    fun       go to state 10
    type      go to state 8
    typename  go to state 9


State 7

    4 func_list: fun .

    $default  reduce using rule 4 (func_list)


State 8

    5 fun: type . fun_head fun_body

    ID  shift, and go to state 11

    fun_head  go to state 12


State 9

   21 type: typename . pointer
   22     | typename .

    STAR  shift, and go to state 13

    $default  reduce using rule 22 (type)

    pointer  go to state 14


State 10

    3 func_list: func_list fun .

    $default  reduce using rule 3 (func_list)


State 11

    6 fun_head: ID . PO PF
    7         | ID . PO params PF

    PO  shift, and go to state 15


State 12

    5 fun: type fun_head . fun_body

    AO  shift, and go to state 16

    fun_body  go to state 17
    func_AO   go to state 18


State 13

   26 pointer: STAR .

    $default  reduce using rule 26 (pointer)


State 14

   21 type: typename pointer .
   25 pointer: pointer . STAR

    STAR  shift, and go to state 19

    $default  reduce using rule 21 (type)


State 15

    6 fun_head: ID PO . PF
    7         | ID PO . params PF

    TINT  shift, and go to state 4
    PF    shift, and go to state 20
    VOID  shift, and go to state 5

    params    go to state 21
    type      go to state 22
    typename  go to state 9


State 16

   14 func_AO: AO .

    $default  reduce using rule 14 (func_AO)


State 17

    5 fun: type fun_head fun_body .

    $default  reduce using rule 5 (fun)


State 18

   13 fun_body: func_AO . block func_AF

    $default  reduce using rule 18 (decl_list)

    block      go to state 23
    decl_list  go to state 24


State 19

   25 pointer: pointer STAR .

    $default  reduce using rule 25 (pointer)


State 20

    6 fun_head: ID PO PF .

    $default  reduce using rule 6 (fun_head)


State 21

    7 fun_head: ID PO params . PF

    PF  shift, and go to state 25


State 22

    8 params: type . ID vir params
    9       | type . ID

    ID  shift, and go to state 26


State 23

   13 fun_body: func_AO block . func_AF

    AF  shift, and go to state 27

    func_AF  go to state 28


State 24

   16 block: decl_list . inst_list
   17 decl_list: decl_list . decl

    NUMI    shift, and go to state 29
    NUMF    shift, and go to state 30
    TINT    shift, and go to state 4
    ID      shift, and go to state 31
    AO      shift, and go to state 32
    PO      shift, and go to state 33
    PV      shift, and go to state 34
    RETURN  shift, and go to state 35
    VOID    shift, and go to state 5
    IF      shift, and go to state 36
    WHILE   shift, and go to state 37
    NOT     shift, and go to state 38
    MOINS   shift, and go to state 39
    STAR    shift, and go to state 40

    PV        [reduce using rule 40 (inst)]
    $default  reduce using rule 40 (inst)

    decl         go to state 41
    var_decl     go to state 42
    type         go to state 43
    typename     go to state 9
    inst_list    go to state 44
    start_block  go to state 45
    inst         go to state 46
    aff          go to state 47
    ret          go to state 48
    cond         go to state 49
    if           go to state 50
    loop         go to state 51
    while        go to state 52
    exp          go to state 53
    app          go to state 54


State 25

    7 fun_head: ID PO params PF .

    $default  reduce using rule 7 (fun_head)


State 26

    8 params: type ID . vir params
    9       | type ID .

    VIR  shift, and go to state 55

    $default  reduce using rule 9 (params)

    vir  go to state 56


State 27

   15 func_AF: AF .

    $default  reduce using rule 15 (func_AF)


State 28

   13 fun_body: func_AO block func_AF .

    $default  reduce using rule 13 (fun_body)


State 29

   62 exp: NUMI .

    $default  reduce using rule 62 (exp)


State 30

   63 exp: NUMF .

    $default  reduce using rule 63 (exp)


State 31

   41 aff: ID . EQ exp
   60 exp: ID .
   72 app: ID . PO args PF

    PO  shift, and go to state 57
    EQ  shift, and go to state 58

    PO        [reduce using rule 60 (exp)]
    $default  reduce using rule 60 (exp)


State 32

   33 start_block: AO .

    $default  reduce using rule 33 (start_block)


State 33

   59 exp: PO . exp PF

    NUMI   shift, and go to state 29
    NUMF   shift, and go to state 30
    ID     shift, and go to state 59
    PO     shift, and go to state 33
    NOT    shift, and go to state 38
    MOINS  shift, and go to state 39
    STAR   shift, and go to state 60

    exp  go to state 61
    app  go to state 54


State 34

   39 inst: PV .

    $default  reduce using rule 39 (inst)


State 35

   43 ret: RETURN . exp
   44    | RETURN . PV

    NUMI   shift, and go to state 29
    NUMF   shift, and go to state 30
    ID     shift, and go to state 59
    PO     shift, and go to state 33
    PV     shift, and go to state 62
    NOT    shift, and go to state 38
    MOINS  shift, and go to state 39
    STAR   shift, and go to state 60

    exp  go to state 63
    app  go to state 54


State 36

   49 if: IF .

    $default  reduce using rule 49 (if)


State 37

   53 while: WHILE .

    $default  reduce using rule 53 (while)


State 38

   65 exp: NOT . exp

    NUMI   shift, and go to state 29
    NUMF   shift, and go to state 30
    ID     shift, and go to state 59
    PO     shift, and go to state 33
    NOT    shift, and go to state 38
    MOINS  shift, and go to state 39
    STAR   shift, and go to state 60

    exp  go to state 64
    app  go to state 54


State 39

   54 exp: MOINS . exp

    NUMI   shift, and go to state 29
    NUMF   shift, and go to state 30
    ID     shift, and go to state 59
    PO     shift, and go to state 33
    NOT    shift, and go to state 38
    MOINS  shift, and go to state 39
    STAR   shift, and go to state 60

    exp  go to state 65
    app  go to state 54


State 40

   42 aff: STAR . exp EQ exp
   64 exp: STAR . exp

    NUMI   shift, and go to state 29
    NUMF   shift, and go to state 30
    ID     shift, and go to state 59
    PO     shift, and go to state 33
    NOT    shift, and go to state 38
    MOINS  shift, and go to state 39
    STAR   shift, and go to state 60

    exp  go to state 66
    app  go to state 54


State 41

   17 decl_list: decl_list decl .

    $default  reduce using rule 17 (decl_list)


State 42

   19 decl: var_decl . PV

    PV  shift, and go to state 67


State 43

   20 var_decl: type . vlist

    ID  shift, and go to state 68

    vlist  go to state 69


State 44

   16 block: decl_list inst_list .

    $default  reduce using rule 16 (block)


State 45

   36 inst: start_block . block end_block

    $default  reduce using rule 18 (decl_list)

    block      go to state 70
    decl_list  go to state 24


State 46

   27 inst_list: inst . PV inst_list
   28          | inst . pvo

    PV  shift, and go to state 71

    PV        [reduce using rule 32 (pvo)]
    $default  reduce using rule 32 (pvo)

    pvo  go to state 72


State 47

   37 inst: aff .

    $default  reduce using rule 37 (inst)


State 48

   38 inst: ret .

    $default  reduce using rule 38 (inst)


State 49

   29 inst_list: cond . inst_list

    NUMI    shift, and go to state 29
    NUMF    shift, and go to state 30
    ID      shift, and go to state 31
    AO      shift, and go to state 32
    PO      shift, and go to state 33
    PV      shift, and go to state 34
    RETURN  shift, and go to state 35
    IF      shift, and go to state 36
    WHILE   shift, and go to state 37
    NOT     shift, and go to state 38
    MOINS   shift, and go to state 39
    STAR    shift, and go to state 40

    NUMI      [reduce using rule 40 (inst)]
    NUMF      [reduce using rule 40 (inst)]
    ID        [reduce using rule 40 (inst)]
    AO        [reduce using rule 40 (inst)]
    PO        [reduce using rule 40 (inst)]
    PV        [reduce using rule 40 (inst)]
    RETURN    [reduce using rule 40 (inst)]
    IF        [reduce using rule 40 (inst)]
    WHILE     [reduce using rule 40 (inst)]
    NOT       [reduce using rule 40 (inst)]
    MOINS     [reduce using rule 40 (inst)]
    STAR      [reduce using rule 40 (inst)]
    $default  reduce using rule 40 (inst)

    inst_list    go to state 73
    start_block  go to state 45
    inst         go to state 46
    aff          go to state 47
    ret          go to state 48
    cond         go to state 49
    if           go to state 50
    loop         go to state 51
    while        go to state 52
    exp          go to state 53
    app          go to state 54


State 50

   45 cond: if . bool_cond inst_list elsop

    PO  shift, and go to state 74

    bool_cond  go to state 75


State 51

   30 inst_list: loop . inst_list

    NUMI    shift, and go to state 29
    NUMF    shift, and go to state 30
    ID      shift, and go to state 31
    AO      shift, and go to state 32
    PO      shift, and go to state 33
    PV      shift, and go to state 34
    RETURN  shift, and go to state 35
    IF      shift, and go to state 36
    WHILE   shift, and go to state 37
    NOT     shift, and go to state 38
    MOINS   shift, and go to state 39
    STAR    shift, and go to state 40

    NUMI      [reduce using rule 40 (inst)]
    NUMF      [reduce using rule 40 (inst)]
    ID        [reduce using rule 40 (inst)]
    AO        [reduce using rule 40 (inst)]
    PO        [reduce using rule 40 (inst)]
    PV        [reduce using rule 40 (inst)]
    RETURN    [reduce using rule 40 (inst)]
    IF        [reduce using rule 40 (inst)]
    WHILE     [reduce using rule 40 (inst)]
    NOT       [reduce using rule 40 (inst)]
    MOINS     [reduce using rule 40 (inst)]
    STAR      [reduce using rule 40 (inst)]
    $default  reduce using rule 40 (inst)

    inst_list    go to state 76
    start_block  go to state 45
    inst         go to state 46
    aff          go to state 47
    ret          go to state 48
    cond         go to state 49
    if           go to state 50
    loop         go to state 51
    while        go to state 52
    exp          go to state 53
    app          go to state 54


State 52

   51 loop: while . while_cond inst_list

    PO  shift, and go to state 77

    while_cond  go to state 78


State 53

   35 inst: exp .
   55 exp: exp . PLUS exp
   56    | exp . MOINS exp
   57    | exp . STAR exp
   58    | exp . DIV exp
   66    | exp . INF exp
   67    | exp . SUP exp
   68    | exp . EQUAL exp
   69    | exp . DIFF exp
   70    | exp . AND exp
   71    | exp . OR exp

    AND    shift, and go to state 79
    OR     shift, and go to state 80
    DIFF   shift, and go to state 81
    EQUAL  shift, and go to state 82
    SUP    shift, and go to state 83
    INF    shift, and go to state 84
    PLUS   shift, and go to state 85
    MOINS  shift, and go to state 86
    STAR   shift, and go to state 87
    DIV    shift, and go to state 88

    MOINS     [reduce using rule 35 (inst)]
    STAR      [reduce using rule 35 (inst)]
    $default  reduce using rule 35 (inst)


State 54

   61 exp: app .

    $default  reduce using rule 61 (exp)


State 55

   12 vir: VIR .

    $default  reduce using rule 12 (vir)


State 56

    8 params: type ID vir . params

    TINT  shift, and go to state 4
    VOID  shift, and go to state 5

    params    go to state 89
    type      go to state 22
    typename  go to state 9


State 57

   72 app: ID PO . args PF

    NUMI   shift, and go to state 29
    NUMF   shift, and go to state 30
    ID     shift, and go to state 59
    PO     shift, and go to state 33
    NOT    shift, and go to state 38
    MOINS  shift, and go to state 39
    STAR   shift, and go to state 60

    $default  reduce using rule 74 (args)

    exp      go to state 90
    app      go to state 54
    args     go to state 91
    arglist  go to state 92


State 58

   41 aff: ID EQ . exp

    NUMI   shift, and go to state 29
    NUMF   shift, and go to state 30
    ID     shift, and go to state 59
    PO     shift, and go to state 33
    NOT    shift, and go to state 38
    MOINS  shift, and go to state 39
    STAR   shift, and go to state 60

    exp  go to state 93
    app  go to state 54


State 59

   60 exp: ID .
   72 app: ID . PO args PF

    PO  shift, and go to state 57

    PO        [reduce using rule 60 (exp)]
    $default  reduce using rule 60 (exp)


State 60

   64 exp: STAR . exp

    NUMI   shift, and go to state 29
    NUMF   shift, and go to state 30
    ID     shift, and go to state 59
    PO     shift, and go to state 33
    NOT    shift, and go to state 38
    MOINS  shift, and go to state 39
    STAR   shift, and go to state 60

    exp  go to state 94
    app  go to state 54


State 61

   55 exp: exp . PLUS exp
   56    | exp . MOINS exp
   57    | exp . STAR exp
   58    | exp . DIV exp
   59    | PO exp . PF
   66    | exp . INF exp
   67    | exp . SUP exp
   68    | exp . EQUAL exp
   69    | exp . DIFF exp
   70    | exp . AND exp
   71    | exp . OR exp

    PF     shift, and go to state 95
    AND    shift, and go to state 79
    OR     shift, and go to state 80
    DIFF   shift, and go to state 81
    EQUAL  shift, and go to state 82
    SUP    shift, and go to state 83
    INF    shift, and go to state 84
    PLUS   shift, and go to state 85
    MOINS  shift, and go to state 86
    STAR   shift, and go to state 87
    DIV    shift, and go to state 88


State 62

   44 ret: RETURN PV .

    $default  reduce using rule 44 (ret)


State 63

   43 ret: RETURN exp .
   55 exp: exp . PLUS exp
   56    | exp . MOINS exp
   57    | exp . STAR exp
   58    | exp . DIV exp
   66    | exp . INF exp
   67    | exp . SUP exp
   68    | exp . EQUAL exp
   69    | exp . DIFF exp
   70    | exp . AND exp
   71    | exp . OR exp

    AND    shift, and go to state 79
    OR     shift, and go to state 80
    DIFF   shift, and go to state 81
    EQUAL  shift, and go to state 82
    SUP    shift, and go to state 83
    INF    shift, and go to state 84
    PLUS   shift, and go to state 85
    MOINS  shift, and go to state 86
    STAR   shift, and go to state 87
    DIV    shift, and go to state 88

    MOINS     [reduce using rule 43 (ret)]
    STAR      [reduce using rule 43 (ret)]
    $default  reduce using rule 43 (ret)


State 64

   55 exp: exp . PLUS exp
   56    | exp . MOINS exp
   57    | exp . STAR exp
   58    | exp . DIV exp
   65    | NOT exp .
   66    | exp . INF exp
   67    | exp . SUP exp
   68    | exp . EQUAL exp
   69    | exp . DIFF exp
   70    | exp . AND exp
   71    | exp . OR exp

    $default  reduce using rule 65 (exp)


State 65

   54 exp: MOINS exp .
   55    | exp . PLUS exp
   56    | exp . MOINS exp
   57    | exp . STAR exp
   58    | exp . DIV exp
   66    | exp . INF exp
   67    | exp . SUP exp
   68    | exp . EQUAL exp
   69    | exp . DIFF exp
   70    | exp . AND exp
   71    | exp . OR exp

    $default  reduce using rule 54 (exp)


State 66

   42 aff: STAR exp . EQ exp
   55 exp: exp . PLUS exp
   56    | exp . MOINS exp
   57    | exp . STAR exp
   58    | exp . DIV exp
   64    | STAR exp .
   66    | exp . INF exp
   67    | exp . SUP exp
   68    | exp . EQUAL exp
   69    | exp . DIFF exp
   70    | exp . AND exp
   71    | exp . OR exp

    EQ  shift, and go to state 96

    $default  reduce using rule 64 (exp)


State 67

   19 decl: var_decl PV .

    $default  reduce using rule 19 (decl)


State 68

   10 vlist: ID . vir vlist
   11      | ID .

    VIR  shift, and go to state 55

    $default  reduce using rule 11 (vlist)

    vir  go to state 97


State 69

   20 var_decl: type vlist .

    $default  reduce using rule 20 (var_decl)


State 70

   36 inst: start_block block . end_block

    AF  shift, and go to state 98

    end_block  go to state 99


State 71

   27 inst_list: inst PV . inst_list
   31 pvo: PV .

    NUMI    shift, and go to state 29
    NUMF    shift, and go to state 30
    ID      shift, and go to state 31
    AO      shift, and go to state 32
    PO      shift, and go to state 33
    PV      shift, and go to state 34
    RETURN  shift, and go to state 35
    IF      shift, and go to state 36
    WHILE   shift, and go to state 37
    NOT     shift, and go to state 38
    MOINS   shift, and go to state 39
    STAR    shift, and go to state 40

    NUMI      [reduce using rule 31 (pvo)]
    NUMI      [reduce using rule 40 (inst)]
    NUMF      [reduce using rule 31 (pvo)]
    NUMF      [reduce using rule 40 (inst)]
    ID        [reduce using rule 31 (pvo)]
    ID        [reduce using rule 40 (inst)]
    AO        [reduce using rule 31 (pvo)]
    AO        [reduce using rule 40 (inst)]
    AF        reduce using rule 31 (pvo)
    AF        [reduce using rule 40 (inst)]
    PO        [reduce using rule 31 (pvo)]
    PO        [reduce using rule 40 (inst)]
    PV        [reduce using rule 31 (pvo)]
    PV        [reduce using rule 40 (inst)]
    RETURN    [reduce using rule 31 (pvo)]
    RETURN    [reduce using rule 40 (inst)]
    IF        [reduce using rule 31 (pvo)]
    IF        [reduce using rule 40 (inst)]
    ELSE      reduce using rule 31 (pvo)
    ELSE      [reduce using rule 40 (inst)]
    WHILE     [reduce using rule 31 (pvo)]
    WHILE     [reduce using rule 40 (inst)]
    NOT       [reduce using rule 31 (pvo)]
    NOT       [reduce using rule 40 (inst)]
    MOINS     [reduce using rule 31 (pvo)]
    MOINS     [reduce using rule 40 (inst)]
    STAR      [reduce using rule 31 (pvo)]
    STAR      [reduce using rule 40 (inst)]
    $default  reduce using rule 31 (pvo)

    inst_list    go to state 100
    start_block  go to state 45
    inst         go to state 46
    aff          go to state 47
    ret          go to state 48
    cond         go to state 49
    if           go to state 50
    loop         go to state 51
    while        go to state 52
    exp          go to state 53
    app          go to state 54


State 72

   28 inst_list: inst pvo .

    $default  reduce using rule 28 (inst_list)


State 73

   29 inst_list: cond inst_list .

    $default  reduce using rule 29 (inst_list)


State 74

   48 bool_cond: PO . exp PF

    NUMI   shift, and go to state 29
    NUMF   shift, and go to state 30
    ID     shift, and go to state 59
    PO     shift, and go to state 33
    NOT    shift, and go to state 38
    MOINS  shift, and go to state 39
    STAR   shift, and go to state 60

    exp  go to state 101
    app  go to state 54


State 75

   45 cond: if bool_cond . inst_list elsop

    NUMI    shift, and go to state 29
    NUMF    shift, and go to state 30
    ID      shift, and go to state 31
    AO      shift, and go to state 32
    PO      shift, and go to state 33
    PV      shift, and go to state 34
    RETURN  shift, and go to state 35
    IF      shift, and go to state 36
    WHILE   shift, and go to state 37
    NOT     shift, and go to state 38
    MOINS   shift, and go to state 39
    STAR    shift, and go to state 40

    NUMI      [reduce using rule 40 (inst)]
    NUMF      [reduce using rule 40 (inst)]
    ID        [reduce using rule 40 (inst)]
    AO        [reduce using rule 40 (inst)]
    PO        [reduce using rule 40 (inst)]
    PV        [reduce using rule 40 (inst)]
    RETURN    [reduce using rule 40 (inst)]
    IF        [reduce using rule 40 (inst)]
    WHILE     [reduce using rule 40 (inst)]
    NOT       [reduce using rule 40 (inst)]
    MOINS     [reduce using rule 40 (inst)]
    STAR      [reduce using rule 40 (inst)]
    $default  reduce using rule 40 (inst)

    inst_list    go to state 102
    start_block  go to state 45
    inst         go to state 46
    aff          go to state 47
    ret          go to state 48
    cond         go to state 49
    if           go to state 50
    loop         go to state 51
    while        go to state 52
    exp          go to state 53
    app          go to state 54


State 76

   30 inst_list: loop inst_list .

    $default  reduce using rule 30 (inst_list)


State 77

   52 while_cond: PO . exp PF

    NUMI   shift, and go to state 29
    NUMF   shift, and go to state 30
    ID     shift, and go to state 59
    PO     shift, and go to state 33
    NOT    shift, and go to state 38
    MOINS  shift, and go to state 39
    STAR   shift, and go to state 60

    exp  go to state 103
    app  go to state 54


State 78

   51 loop: while while_cond . inst_list

    NUMI    shift, and go to state 29
    NUMF    shift, and go to state 30
    ID      shift, and go to state 31
    AO      shift, and go to state 32
    PO      shift, and go to state 33
    PV      shift, and go to state 34
    RETURN  shift, and go to state 35
    IF      shift, and go to state 36
    WHILE   shift, and go to state 37
    NOT     shift, and go to state 38
    MOINS   shift, and go to state 39
    STAR    shift, and go to state 40

    NUMI      [reduce using rule 40 (inst)]
    NUMF      [reduce using rule 40 (inst)]
    ID        [reduce using rule 40 (inst)]
    AO        [reduce using rule 40 (inst)]
    PO        [reduce using rule 40 (inst)]
    PV        [reduce using rule 40 (inst)]
    RETURN    [reduce using rule 40 (inst)]
    IF        [reduce using rule 40 (inst)]
    WHILE     [reduce using rule 40 (inst)]
    NOT       [reduce using rule 40 (inst)]
    MOINS     [reduce using rule 40 (inst)]
    STAR      [reduce using rule 40 (inst)]
    $default  reduce using rule 40 (inst)

    inst_list    go to state 104
    start_block  go to state 45
    inst         go to state 46
    aff          go to state 47
    ret          go to state 48
    cond         go to state 49
    if           go to state 50
    loop         go to state 51
    while        go to state 52
    exp          go to state 53
    app          go to state 54


State 79

   70 exp: exp AND . exp

    NUMI   shift, and go to state 29
    NUMF   shift, and go to state 30
    ID     shift, and go to state 59
    PO     shift, and go to state 33
    NOT    shift, and go to state 38
    MOINS  shift, and go to state 39
    STAR   shift, and go to state 60

    exp  go to state 105
    app  go to state 54


State 80

   71 exp: exp OR . exp

    NUMI   shift, and go to state 29
    NUMF   shift, and go to state 30
    ID     shift, and go to state 59
    PO     shift, and go to state 33
    NOT    shift, and go to state 38
    MOINS  shift, and go to state 39
    STAR   shift, and go to state 60

    exp  go to state 106
    app  go to state 54


State 81

   69 exp: exp DIFF . exp

    NUMI   shift, and go to state 29
    NUMF   shift, and go to state 30
    ID     shift, and go to state 59
    PO     shift, and go to state 33
    NOT    shift, and go to state 38
    MOINS  shift, and go to state 39
    STAR   shift, and go to state 60

    exp  go to state 107
    app  go to state 54


State 82

   68 exp: exp EQUAL . exp

    NUMI   shift, and go to state 29
    NUMF   shift, and go to state 30
    ID     shift, and go to state 59
    PO     shift, and go to state 33
    NOT    shift, and go to state 38
    MOINS  shift, and go to state 39
    STAR   shift, and go to state 60

    exp  go to state 108
    app  go to state 54


State 83

   67 exp: exp SUP . exp

    NUMI   shift, and go to state 29
    NUMF   shift, and go to state 30
    ID     shift, and go to state 59
    PO     shift, and go to state 33
    NOT    shift, and go to state 38
    MOINS  shift, and go to state 39
    STAR   shift, and go to state 60

    exp  go to state 109
    app  go to state 54


State 84

   66 exp: exp INF . exp

    NUMI   shift, and go to state 29
    NUMF   shift, and go to state 30
    ID     shift, and go to state 59
    PO     shift, and go to state 33
    NOT    shift, and go to state 38
    MOINS  shift, and go to state 39
    STAR   shift, and go to state 60

    exp  go to state 110
    app  go to state 54


State 85

   55 exp: exp PLUS . exp

    NUMI   shift, and go to state 29
    NUMF   shift, and go to state 30
    ID     shift, and go to state 59
    PO     shift, and go to state 33
    NOT    shift, and go to state 38
    MOINS  shift, and go to state 39
    STAR   shift, and go to state 60

    exp  go to state 111
    app  go to state 54


State 86

   56 exp: exp MOINS . exp

    NUMI   shift, and go to state 29
    NUMF   shift, and go to state 30
    ID     shift, and go to state 59
    PO     shift, and go to state 33
    NOT    shift, and go to state 38
    MOINS  shift, and go to state 39
    STAR   shift, and go to state 60

    exp  go to state 112
    app  go to state 54


State 87

   57 exp: exp STAR . exp

    NUMI   shift, and go to state 29
    NUMF   shift, and go to state 30
    ID     shift, and go to state 59
    PO     shift, and go to state 33
    NOT    shift, and go to state 38
    MOINS  shift, and go to state 39
    STAR   shift, and go to state 60

    exp  go to state 113
    app  go to state 54


State 88

   58 exp: exp DIV . exp

    NUMI   shift, and go to state 29
    NUMF   shift, and go to state 30
    ID     shift, and go to state 59
    PO     shift, and go to state 33
    NOT    shift, and go to state 38
    MOINS  shift, and go to state 39
    STAR   shift, and go to state 60

    exp  go to state 114
    app  go to state 54


State 89

    8 params: type ID vir params .

    $default  reduce using rule 8 (params)


State 90

   55 exp: exp . PLUS exp
   56    | exp . MOINS exp
   57    | exp . STAR exp
   58    | exp . DIV exp
   66    | exp . INF exp
   67    | exp . SUP exp
   68    | exp . EQUAL exp
   69    | exp . DIFF exp
   70    | exp . AND exp
   71    | exp . OR exp
   75 arglist: exp . VIR arglist
   76        | exp .

    VIR    shift, and go to state 115
    AND    shift, and go to state 79
    OR     shift, and go to state 80
    DIFF   shift, and go to state 81
    EQUAL  shift, and go to state 82
    SUP    shift, and go to state 83
    INF    shift, and go to state 84
    PLUS   shift, and go to state 85
    MOINS  shift, and go to state 86
    STAR   shift, and go to state 87
    DIV    shift, and go to state 88

    $default  reduce using rule 76 (arglist)


State 91

   72 app: ID PO args . PF

    PF  shift, and go to state 116


State 92

   73 args: arglist .

    $default  reduce using rule 73 (args)


State 93

   41 aff: ID EQ exp .
   55 exp: exp . PLUS exp
   56    | exp . MOINS exp
   57    | exp . STAR exp
   58    | exp . DIV exp
   66    | exp . INF exp
   67    | exp . SUP exp
   68    | exp . EQUAL exp
   69    | exp . DIFF exp
   70    | exp . AND exp
   71    | exp . OR exp

    AND    shift, and go to state 79
    OR     shift, and go to state 80
    DIFF   shift, and go to state 81
    EQUAL  shift, and go to state 82
    SUP    shift, and go to state 83
    INF    shift, and go to state 84
    PLUS   shift, and go to state 85
    MOINS  shift, and go to state 86
    STAR   shift, and go to state 87
    DIV    shift, and go to state 88

    MOINS     [reduce using rule 41 (aff)]
    STAR      [reduce using rule 41 (aff)]
    $default  reduce using rule 41 (aff)


State 94

   55 exp: exp . PLUS exp
   56    | exp . MOINS exp
   57    | exp . STAR exp
   58    | exp . DIV exp
   64    | STAR exp .
   66    | exp . INF exp
   67    | exp . SUP exp
   68    | exp . EQUAL exp
   69    | exp . DIFF exp
   70    | exp . AND exp
   71    | exp . OR exp

    $default  reduce using rule 64 (exp)


State 95

   59 exp: PO exp PF .

    $default  reduce using rule 59 (exp)


State 96

   42 aff: STAR exp EQ . exp

    NUMI   shift, and go to state 29
    NUMF   shift, and go to state 30
    ID     shift, and go to state 59
    PO     shift, and go to state 33
    NOT    shift, and go to state 38
    MOINS  shift, and go to state 39
    STAR   shift, and go to state 60

    exp  go to state 117
    app  go to state 54


State 97

   10 vlist: ID vir . vlist

    ID  shift, and go to state 68

    vlist  go to state 118


State 98

   34 end_block: AF .

    $default  reduce using rule 34 (end_block)


State 99

   36 inst: start_block block end_block .

    $default  reduce using rule 36 (inst)


State 100

   27 inst_list: inst PV inst_list .

    $default  reduce using rule 27 (inst_list)


State 101

   48 bool_cond: PO exp . PF
   55 exp: exp . PLUS exp
   56    | exp . MOINS exp
   57    | exp . STAR exp
   58    | exp . DIV exp
   66    | exp . INF exp
   67    | exp . SUP exp
   68    | exp . EQUAL exp
   69    | exp . DIFF exp
   70    | exp . AND exp
   71    | exp . OR exp

    PF     shift, and go to state 119
    AND    shift, and go to state 79
    OR     shift, and go to state 80
    DIFF   shift, and go to state 81
    EQUAL  shift, and go to state 82
    SUP    shift, and go to state 83
    INF    shift, and go to state 84
    PLUS   shift, and go to state 85
    MOINS  shift, and go to state 86
    STAR   shift, and go to state 87
    DIV    shift, and go to state 88


State 102

   45 cond: if bool_cond inst_list . elsop

    ELSE  shift, and go to state 120

    ELSE      [reduce using rule 47 (elsop)]
    $default  reduce using rule 47 (elsop)

    elsop  go to state 121
    else   go to state 122


State 103

   52 while_cond: PO exp . PF
   55 exp: exp . PLUS exp
   56    | exp . MOINS exp
   57    | exp . STAR exp
   58    | exp . DIV exp
   66    | exp . INF exp
   67    | exp . SUP exp
   68    | exp . EQUAL exp
   69    | exp . DIFF exp
   70    | exp . AND exp
   71    | exp . OR exp

    PF     shift, and go to state 123
    AND    shift, and go to state 79
    OR     shift, and go to state 80
    DIFF   shift, and go to state 81
    EQUAL  shift, and go to state 82
    SUP    shift, and go to state 83
    INF    shift, and go to state 84
    PLUS   shift, and go to state 85
    MOINS  shift, and go to state 86
    STAR   shift, and go to state 87
    DIV    shift, and go to state 88


State 104

   51 loop: while while_cond inst_list .

    $default  reduce using rule 51 (loop)


State 105

   55 exp: exp . PLUS exp
   56    | exp . MOINS exp
   57    | exp . STAR exp
   58    | exp . DIV exp
   66    | exp . INF exp
   67    | exp . SUP exp
   68    | exp . EQUAL exp
   69    | exp . DIFF exp
   70    | exp . AND exp
   70    | exp AND exp .
   71    | exp . OR exp

    $default  reduce using rule 70 (exp)


State 106

   55 exp: exp . PLUS exp
   56    | exp . MOINS exp
   57    | exp . STAR exp
   58    | exp . DIV exp
   66    | exp . INF exp
   67    | exp . SUP exp
   68    | exp . EQUAL exp
   69    | exp . DIFF exp
   70    | exp . AND exp
   71    | exp . OR exp
   71    | exp OR exp .

    AND  shift, and go to state 79

    $default  reduce using rule 71 (exp)


State 107

   55 exp: exp . PLUS exp
   56    | exp . MOINS exp
   57    | exp . STAR exp
   58    | exp . DIV exp
   66    | exp . INF exp
   67    | exp . SUP exp
   68    | exp . EQUAL exp
   69    | exp . DIFF exp
   69    | exp DIFF exp .
   70    | exp . AND exp
   71    | exp . OR exp

    AND    shift, and go to state 79
    OR     shift, and go to state 80
    PLUS   shift, and go to state 85
    MOINS  shift, and go to state 86
    STAR   shift, and go to state 87
    DIV    shift, and go to state 88

    $default  reduce using rule 69 (exp)


State 108

   55 exp: exp . PLUS exp
   56    | exp . MOINS exp
   57    | exp . STAR exp
   58    | exp . DIV exp
   66    | exp . INF exp
   67    | exp . SUP exp
   68    | exp . EQUAL exp
   68    | exp EQUAL exp .
   69    | exp . DIFF exp
   70    | exp . AND exp
   71    | exp . OR exp

    AND    shift, and go to state 79
    OR     shift, and go to state 80
    PLUS   shift, and go to state 85
    MOINS  shift, and go to state 86
    STAR   shift, and go to state 87
    DIV    shift, and go to state 88

    $default  reduce using rule 68 (exp)


State 109

   55 exp: exp . PLUS exp
   56    | exp . MOINS exp
   57    | exp . STAR exp
   58    | exp . DIV exp
   66    | exp . INF exp
   67    | exp . SUP exp
   67    | exp SUP exp .
   68    | exp . EQUAL exp
   69    | exp . DIFF exp
   70    | exp . AND exp
   71    | exp . OR exp

    AND    shift, and go to state 79
    OR     shift, and go to state 80
    PLUS   shift, and go to state 85
    MOINS  shift, and go to state 86
    STAR   shift, and go to state 87
    DIV    shift, and go to state 88

    $default  reduce using rule 67 (exp)


State 110

   55 exp: exp . PLUS exp
   56    | exp . MOINS exp
   57    | exp . STAR exp
   58    | exp . DIV exp
   66    | exp . INF exp
   66    | exp INF exp .
   67    | exp . SUP exp
   68    | exp . EQUAL exp
   69    | exp . DIFF exp
   70    | exp . AND exp
   71    | exp . OR exp

    AND    shift, and go to state 79
    OR     shift, and go to state 80
    PLUS   shift, and go to state 85
    MOINS  shift, and go to state 86
    STAR   shift, and go to state 87
    DIV    shift, and go to state 88

    $default  reduce using rule 66 (exp)


State 111

   55 exp: exp . PLUS exp
   55    | exp PLUS exp .
   56    | exp . MOINS exp
   57    | exp . STAR exp
   58    | exp . DIV exp
   66    | exp . INF exp
   67    | exp . SUP exp
   68    | exp . EQUAL exp
   69    | exp . DIFF exp
   70    | exp . AND exp
   71    | exp . OR exp

    AND   shift, and go to state 79
    OR    shift, and go to state 80
    STAR  shift, and go to state 87
    DIV   shift, and go to state 88

    $default  reduce using rule 55 (exp)


State 112

   55 exp: exp . PLUS exp
   56    | exp . MOINS exp
   56    | exp MOINS exp .
   57    | exp . STAR exp
   58    | exp . DIV exp
   66    | exp . INF exp
   67    | exp . SUP exp
   68    | exp . EQUAL exp
   69    | exp . DIFF exp
   70    | exp . AND exp
   71    | exp . OR exp

    AND   shift, and go to state 79
    OR    shift, and go to state 80
    STAR  shift, and go to state 87
    DIV   shift, and go to state 88

    $default  reduce using rule 56 (exp)


State 113

   55 exp: exp . PLUS exp
   56    | exp . MOINS exp
   57    | exp . STAR exp
   57    | exp STAR exp .
   58    | exp . DIV exp
   66    | exp . INF exp
   67    | exp . SUP exp
   68    | exp . EQUAL exp
   69    | exp . DIFF exp
   70    | exp . AND exp
   71    | exp . OR exp

    AND  shift, and go to state 79
    OR   shift, and go to state 80

    $default  reduce using rule 57 (exp)


State 114

   55 exp: exp . PLUS exp
   56    | exp . MOINS exp
   57    | exp . STAR exp
   58    | exp . DIV exp
   58    | exp DIV exp .
   66    | exp . INF exp
   67    | exp . SUP exp
   68    | exp . EQUAL exp
   69    | exp . DIFF exp
   70    | exp . AND exp
   71    | exp . OR exp

    AND  shift, and go to state 79
    OR   shift, and go to state 80

    $default  reduce using rule 58 (exp)


State 115

   75 arglist: exp VIR . arglist

    NUMI   shift, and go to state 29
    NUMF   shift, and go to state 30
    ID     shift, and go to state 59
    PO     shift, and go to state 33
    NOT    shift, and go to state 38
    MOINS  shift, and go to state 39
    STAR   shift, and go to state 60

    exp      go to state 90
    app      go to state 54
    arglist  go to state 124


State 116

   72 app: ID PO args PF .

    $default  reduce using rule 72 (app)


State 117

   42 aff: STAR exp EQ exp .
   55 exp: exp . PLUS exp
   56    | exp . MOINS exp
   57    | exp . STAR exp
   58    | exp . DIV exp
   66    | exp . INF exp
   67    | exp . SUP exp
   68    | exp . EQUAL exp
   69    | exp . DIFF exp
   70    | exp . AND exp
   71    | exp . OR exp

    AND    shift, and go to state 79
    OR     shift, and go to state 80
    DIFF   shift, and go to state 81
    EQUAL  shift, and go to state 82
    SUP    shift, and go to state 83
    INF    shift, and go to state 84
    PLUS   shift, and go to state 85
    MOINS  shift, and go to state 86
    STAR   shift, and go to state 87
    DIV    shift, and go to state 88

    MOINS     [reduce using rule 42 (aff)]
    STAR      [reduce using rule 42 (aff)]
    $default  reduce using rule 42 (aff)


State 118

   10 vlist: ID vir vlist .

    $default  reduce using rule 10 (vlist)


State 119

   48 bool_cond: PO exp PF .

    $default  reduce using rule 48 (bool_cond)


State 120

   50 else: ELSE .

    $default  reduce using rule 50 (else)


State 121

   45 cond: if bool_cond inst_list elsop .

    $default  reduce using rule 45 (cond)


State 122

   46 elsop: else . inst_list

    NUMI    shift, and go to state 29
    NUMF    shift, and go to state 30
    ID      shift, and go to state 31
    AO      shift, and go to state 32
    PO      shift, and go to state 33
    PV      shift, and go to state 34
    RETURN  shift, and go to state 35
    IF      shift, and go to state 36
    WHILE   shift, and go to state 37
    NOT     shift, and go to state 38
    MOINS   shift, and go to state 39
    STAR    shift, and go to state 40

    NUMI      [reduce using rule 40 (inst)]
    NUMF      [reduce using rule 40 (inst)]
    ID        [reduce using rule 40 (inst)]
    AO        [reduce using rule 40 (inst)]
    PO        [reduce using rule 40 (inst)]
    PV        [reduce using rule 40 (inst)]
    RETURN    [reduce using rule 40 (inst)]
    IF        [reduce using rule 40 (inst)]
    WHILE     [reduce using rule 40 (inst)]
    NOT       [reduce using rule 40 (inst)]
    MOINS     [reduce using rule 40 (inst)]
    STAR      [reduce using rule 40 (inst)]
    $default  reduce using rule 40 (inst)

    inst_list    go to state 125
    start_block  go to state 45
    inst         go to state 46
    aff          go to state 47
    ret          go to state 48
    cond         go to state 49
    if           go to state 50
    loop         go to state 51
    while        go to state 52
    exp          go to state 53
    app          go to state 54


State 123

   52 while_cond: PO exp PF .

    $default  reduce using rule 52 (while_cond)


State 124

   75 arglist: exp VIR arglist .

    $default  reduce using rule 75 (arglist)


State 125

   46 elsop: else inst_list .

    $default  reduce using rule 46 (elsop)
